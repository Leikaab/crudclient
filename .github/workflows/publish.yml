name: Publish to PyPI

on:
  workflow_run:
    workflows: ["Run Tests"]
    types:
      - completed

jobs:
  publish:
    if: github.event.workflow_run.conclusion == 'success' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
            fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root --no-dev --no-interaction --no-ansi

      - name: Get current version
        id: get_version
        run: |
          echo "CURRENT_VERSION=$(poetry version -s)" >> $GITHUB_ENV
          echo "Current version is $CURRENT_VERSION"

      - name: Get latest tag
        id: get_tag
        run: |
          TAG=$(git describe --tags --abbrev=0)
          echo "LATEST_TAG=${TAG}" >> $GITHUB_ENV
          echo "Latest tag is $LATEST_TAG"

      - name: Check if version bump is required
        id: check_version
        run: |
          if [ "$(echo ${{ env.CURRENT_VERSION }} ${{ env.LATEST_TAG }} | awk '{print ($1 > $2)}')" = "1" ]; then
            echo "::set-output name=should_publish::true"
          else
            echo "Version has not been bumped. Skipping publish."
            echo "::set-output name=should_publish::false"
          fi

      - name: Publish to PyPI
        if: steps.check_version.outputs.should_publish == 'true'
        run: |
          poetry publish --build --username __token__ --password ${{ secrets.PYPI_API_TOKEN }}
        env:
          PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}

      - name: Create new tag
        if: steps.check_version.outputs.should_publish == 'true'
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ env.CURRENT_VERSION }}
          git push origin --tags
